col = "black",
bty = "n"
)
tkplot (g.invites.network.cleanall)
library(data.table)
library(ggplot2)
library(igraph)
library(random)
install.packages("random")
library(data.table)
library(ggplot2)
library(igraph)
library(random)
load("nda-dating-likes.RData")
random_nodes = sample(list(g.invites.network.cleanall.nodes()), 200)
g.invites.network.cleanall[0:100]
random_nodes = sample(list(g.invites.network.cleanall.nodes()), 200)
plot(g.invites.network.cleanall[0:100], main = "", vertex.size= degree(g.invites.network.cleanall[0:100])/10 +1, vertex.label = NA, vertex.color = c("pink", "lightskyblue")[match(V(g.invites.network.cleanall[0:100])$gender, c("Female", "Male"))], edge.arrow.size = .25, )
random_nodes = sample(list(g.invites.network.cleanall), 200)
random_nodes = sample(list(g.invites.network.cleanall), 5)
plot(g.invites.network.cleanall, main = "", vertex.size= degree(g.invites.network.cleanall)/10 +1, vertex.label = NA, vertex.color = c("pink", "lightskyblue")[match(V(g.invites.network.cleanall)$gender, c("Female", "Male"))], edge.arrow.size = .25, )
legend(
"bottomright",
pch = 21,
legend = c("Male", "Female"),
pt.cex = 2,
pt.bg = c("lightskyblue", "pink"),
col = "black",
bty = "n"
)
plot(g.invites.network.cleanall, main = "", vertex.size= degree(g.invites.network.cleanall)/5 +1, vertex.label = NA, vertex.color = c("pink", "lightskyblue")[match(V(g.invites.network.cleanall)$gender, c("Female", "Male"))], edge.arrow.size = .25, )
legend(
"bottomright",
pch = 21,
legend = c("Male", "Female"),
pt.cex = 2,
pt.bg = c("lightskyblue", "pink"),
col = "black",
bty = "n"
)
plot(g.invites.network.cleanall, main = "", vertex.size= degree(g.invites.network.cleanall)/5 +1, vertex.label = NA, vertex.color = c("pink", "lightskyblue")[match(V(g.invites.network.cleanall)$gender, c("Female", "Male"))], edge.arrow.size = .25, )
legend(
"bottomright",
pch = 21,
legend = c("Male", "Female"),
pt.cex = 2,
pt.bg = c("lightskyblue", "pink"),
col = "black",
bty = "n"
)
plot(g.invites.network.cleanall, main = "", vertex.size= degree(g.invites.network.cleanall)/5 +1, vertex.label = NA, vertex.color = c("pink", "lightskyblue")[match(V(g.invites.network.cleanall)$gender, c("Female", "Male"))], edge.arrow.size = .50, )
legend(
"bottomright",
pch = 21,
legend = c("Male", "Female"),
pt.cex = 2,
pt.bg = c("lightskyblue", "pink"),
col = "black",
bty = "n"
)
plot(g.invites.network.cleanall, main = "", vertex.size= 10, vertex.label = NA, vertex.color = c("pink", "lightskyblue")[match(V(g.invites.network.cleanall)$gender, c("Female", "Male"))], edge.arrow.size = .50, )
legend(
"bottomright",
pch = 21,
legend = c("Male", "Female"),
pt.cex = 2,
pt.bg = c("lightskyblue", "pink"),
col = "black",
bty = "n"
)
ggraph(g.invites.network.cleanall,layout = "stress")+
geom_edge_link0(edge_width = 0.2,colour = "grey")+
geom_node_point(col = "black",size = 0.3)+
theme_graph()
ggplot(g.invites.network.cleanall,layout = "stress")+
geom_edge_link0(edge_width = 0.2,colour = "grey")+
geom_node_point(col = "black",size = 0.3)+
theme_graph()
library(ggraph)
install.packages("ggraph")
library(ggraph)
set.seed(665)
ggraph(g.invites.network.cleanall,layout = "stress")+
geom_edge_link0(edge_width = 0.2,colour = "grey")+
geom_node_point(col = "black",size = 0.3)+
theme_graph()
legend(
"bottomright",
pch = 21,
legend = c("Male", "Female"),
pt.cex = 2,
pt.bg = c("lightskyblue", "pink"),
col = "black",
bty = "n"
)
library(ggraph)
ggraph(g.invites.network.cleanall,layout = "stress")+
geom_edge_link0(edge_width = 0.8,colour = "grey")+
geom_node_point(col = "black",size = 1)+
theme_graph()
g.invites.network.cleanall
orwg(g.invites.network.cleanall, "gender")
orwg(g.invites.network.cleanall$gender, "gender")
orwg(g.invites.network.cleanall)
plt.distance
distance.table <- distance_table(g.invites.network)$res
plt.distance <- plot(distance.table, main="Distance Table")
dt.influencers <- aggregate(data.frame(count = dt.users$inviter_id), list(value = dt.users$inviter_id), length)
dt.influencers[order(-influencers$count), ]
plt.invites.id <- ggplot(dt.influencers, aes(y=dt.influencers$value, x=dt.influencers$count)) + geom_point() + geom_smooth(se = FALSE) + annotate("rect", xmin = 0, xmax = 5,ymin=0, ymax=Inf, alpha = .2) + geom_vline(xintercept=5, linetype="dashed", color = "red") + labs(x = "Number of Invites", y="User ID") + geom_text(aes(x=5, y= Inf, label = "5 users invited"), colour = "red", vjust = 1, hjust = -0.1, size = 3) + ggtitle("Number of Invites per User ID")
degree.cent <- centr_degree(g.invites.network, mode = "all")
as.data.frame(table(degree.cent$res))
plt.new.users <- ggplot(dt.users, aes(x=dt.users$approved_week)) + geom_histogram() + labs(x="Date", y="Number of New Users") + ggtitle("Number of New Users per Year")
distance.table <- distance_table(g.invites.network)$res
all.users.date <- dt.users[, list(user_id, inviter_id, approved_week )]
sapply(all.users.date, class)
all.users.date$approved_week <- as.integer(gsub(pattern = "-", replacement="", x = all.users.date$approved_week))
all.users.date.clean <- all.users.date[complete.cases(all.users.date), ]
plt.invites.year <- ggplot(all.users.date.clean, aes(x=all.users.date.clean$approved_week)) + geom_histogram(binwidth = 100) +     labs(x="Date", y="Number of Invites") + ggtitle("Number of Invites per Year")
plt.invites.id
plot(distance.table, main="Distance Table")
plt.new.users
plt.invites.year
g.likes.network.undirected <- as.undirected(g.likes.network, mode="mutual")
dt.users
dt.likes
library(data.table)
library(ggplot2)
library(igraph)
library(random) #added in order to provide graphical representation of large amounts of data
load("nda-dating-likes.RData")
all.users <- dt.users[, list(user_id, inviter_id)]
all.users.clean <- all.users[complete.cases(all.users), ]
g.invites.network <- graph.data.frame(all.users.clean, directed = TRUE)
plot(g.invites.network, main = "Invites Directed Network", vertex.size= degree(g.invites.network)/10 +1,vertex.label = NA, edge.arrow.size = .25)
diameter(g.invites.network)
transitivity(g.invites.network)
dt.influencers <- aggregate(data.frame(count = dt.users$inviter_id), list(value = dt.users$inviter_id), length)
dt.influencers[order(-influencers$count), ]
plt.invites.id <- ggplot(dt.influencers, aes(y=dt.influencers$value, x=dt.influencers$count)) + geom_point() + geom_smooth(se = FALSE) + annotate("rect", xmin = 0, xmax = 5,ymin=0, ymax=Inf, alpha = .2) + geom_vline(xintercept=5, linetype="dashed", color = "red") + labs(x = "Number of Invites", y="User ID") + geom_text(aes(x=5, y= Inf, label = "5 users invited"), colour = "red", vjust = 1, hjust = -0.1, size = 3) + ggtitle("Number of Invites per User ID")
degree.cent <- centr_degree(g.invites.network, mode = "all")
as.data.frame(table(degree.cent$res))
plt.new.users <- ggplot(dt.users, aes(x=dt.users$approved_week)) + geom_histogram() + labs(x="Date", y="Number of New Users") + ggtitle("Number of New Users per Year")
distance.table <- distance_table(g.invites.network)$res
all.users.date <- dt.users[, list(user_id, inviter_id, approved_week )]
sapply(all.users.date, class)
all.users.date$approved_week <- as.integer(gsub(pattern = "-", replacement="", x = all.users.date$approved_week))
all.users.date.clean <- all.users.date[complete.cases(all.users.date), ]
plt.invites.year <- ggplot(all.users.date.clean, aes(x=all.users.date.clean$approved_week)) + geom_histogram(binwidth = 100) +     labs(x="Date", y="Number of Invites") + ggtitle("Number of Invites per Year")
plt.invites.id
plot(distance.table, main="Distance Table")
plt.new.users
plt.invites.year
# <Answer here>
sum(is.na(dt.likes))
likes.sender.receiever <- dt.likes[, list(sender_user_id, receiver_user_id)]
g.likes.network <- graph.data.frame(likes.sender.receiever, directed = TRUE)
transitivity(g.likes.network)
set.seed(1234)
l = layout_with_lgl(g.likes.network, maxiter=20)
# plot(g.likes.network, main = "Likes Directed Network", vertex.label = NA, pch='.', edge.color="gray60", pad=0.4,layout=l, vertex.size=0.02)
# <Answer here>
g.likes.network.undirected <- as.undirected(g.likes.network, mode="mutual")
transitivity(g.likes.network.undirected)
set.seed(1234)
l = layout_with_lgl(g.likes.network.undirected, maxiter=20)
plot(g.likes.network.undirected, main = "Likes undirected Network", vertex.label = NA, pch='.', edge.color="gray60", pad=0.4,layout=l, vertex.size=degree(g.likes.network.undirected)/100 +1)
dt.gender.all[, gender_inviter := get(c(gender_dummy)), by = user_id]
dt.users
dt.likes
library(data.table)
library(ggplot2)
library(igraph)
library(random) #added in order to provide graphical representation of large amounts of data
load("nda-dating-likes.RData")
all.users <- dt.users[, list(user_id, inviter_id)]
all.users.clean <- all.users[complete.cases(all.users), ]
g.invites.network <- graph.data.frame(all.users.clean, directed = TRUE)
par(mar=c(0,0,0,0))
plot(g.invites.network, main = "Invites Directed Network", vertex.size= degree(g.invites.network)/10 +1,vertex.label = NA, edge.arrow.size = .25)
diameter(g.invites.network)
transitivity(g.invites.network)
dt.influencers <- aggregate(data.frame(count = dt.users$inviter_id), list(value = dt.users$inviter_id), length)
dt.influencers[order(-dt.influencers$count), ]
plt.invites.id <- ggplot(dt.influencers, aes(y=dt.influencers$value, x=dt.influencers$count)) + geom_point() + geom_smooth(se = FALSE) + annotate("rect", xmin = 0, xmax = 5,ymin=0, ymax=Inf, alpha = .2) + geom_vline(xintercept=5, linetype="dashed", color = "red") + labs(x = "Number of Invites", y="User ID") + geom_text(aes(x=5, y= Inf, label = "5 users invited"), colour = "red", vjust = 1, hjust = -0.1, size = 3) + ggtitle("Number of Invites per User ID")
degree.cent <- centr_degree(g.invites.network, mode = "all")
as.data.frame(table(degree.cent$res))
plt.new.users <- ggplot(dt.users, aes(x=dt.users$approved_week)) + geom_histogram() + labs(x="Date", y="Number of New Users") + ggtitle("Number of New Users per Year")
distance.table <- distance_table(g.invites.network)$res
all.users.date <- dt.users[, list(user_id, inviter_id, approved_week )]
sapply(all.users.date, class)
all.users.date$approved_week <- as.integer(gsub(pattern = "-", replacement="", x = all.users.date$approved_week))
all.users.date.clean <- all.users.date[complete.cases(all.users.date), ]
plt.invites.year <- ggplot(all.users.date.clean, aes(x=all.users.date.clean$approved_week)) + geom_histogram(binwidth = 100) +     labs(x="Date", y="Number of Invites") + ggtitle("Number of Invites per Year")
plt.invites.id
plot(distance.table, main="Distance Table")
plt.new.users
plt.invites.year
dt.gender.all <- as.data.table(dt.users[, list(user_id,inviter_id, gender)])
dt.gender.all
dt.gender.all$gender_dummy <- as.integer(ifelse(dt.gender.all$gender == 'Male', 1, 0))
dt.gender.all
dt.gender.all[, gender_inviter := get(c(gender_dummy)), by = user_id]
dt.gender.all[, gender_inviter := get(gender_dummy), by = user_id]
dt.gender.all[, gender_inviter := gender_dummy, by = user_id]
dt.gender.all
dt.gender.all[, gender_inviter := gender_dummy, by = inviter_id]
dt.gender.all
dt.gender.all
dt.gender.all <- as.data.table(dt.users[, list(user_id,inviter_id, gender)])
dt.gender.all <- dt.gender.all[complete.cases(dt.gender.all), ]
dt.gender.all
dt.gender.all$gender_dummy <- as.integer(ifelse(dt.gender.all$gender == 'Male', 1, 0))
dt.gender.all
dt.gender.all[, gender_inviter := gender_dummy, by = inviter_id]
dt.gender.all
VieW(dt.gender.all)
View(dt.gender.all)
dt.gender.all <- as.data.table(dt.users[, list(user_id,inviter_id, gender)])
dt.gender.all
dt.gender.all$gender_dummy <- as.integer(ifelse(dt.gender.all$gender == 'Male', 1, 0))
dt.gender.all
dt.gender.all[, gender_inviter := gender_dummy, by = inviter_id]
dt.gender.all
dt.gender.all$inviter_id[is.na(dt.gender.all$inviter_id)] <- 0
dt.gender.all
dt.gender.all$gender_dummy <- as.integer(ifelse(dt.gender.all$gender == 'Male', 1, 0))
dt.gender.all
dt.gender.all <- as.data.table(dt.users[, list(user_id,inviter_id, gender)])
dt.gender.all$inviter_id[is.na(dt.gender.all$inviter_id)] <- 0
dt.gender.all
dt.gender.all$gender_dummy <- as.integer(ifelse(dt.gender.all$gender == 'Male', 1, 0))
dt.gender.all
dt.gender.all[, gender_inviter := gender_dummy, by = inviter_id]
dt.gender.all
dt.gender.all[, gender_inviter := get(c(gender_dummy)), by = inviter_id]
dt.gender.all[, gender_inviter := gender_dummy, by = inviter_id]
dt.gender.all[, gender_inviter := gender_dummy, by = inviter_id]
dt.gender.all
dt.gender.all[, gender_inviter := get(c(gender_dummy)), by = inviter_id]
dt.gender.all[, gender_inviter := get(c(..gender_dummy)), by = inviter_id]
dt.gender.all[, gender_inviter := get(..c(gender_dummy)), by = inviter_id]
dt.gender.all[, gender_inviter := get(c(gender_dummy)), by = ..inviter_id]
dt.gender.all[, gender_inviter := get(c(gender_dummy)), by = .inviter_id]
dt.gender.all[, gender_inviter := get(c(gender_dummy)), by = inviter_id]
dt.gender.all[, gender_inviter := get(c(.gender_dummy)), by = inviter_id]
dt.gender.all[, gender_inviter := get(c(..gender_dummy)), by = inviter_id]
dt.gender.all
dt.gender.all[, gender_inviter := get(c(..gender_dummy)), by = inviter_id]
dt.gender.all[, gender_inviter := {dput(gender_dummy); get(gender_dummy)}, by = inviter_id]
dt.gender.all[, gender_inviter := {dput(gender_dummy); get(c(gender_dummy))}, by = inviter_id]
dt.gender.all[, gender_inviter := ({dput(gender_dummy); get(gender_dummy)}), by = inviter_id]
dt.gender.all[, gender_inviter := get(c(gender_dummy)), by = inviter_id]
dt.gender.all
setwd("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App")
# install.packages("shiny")
# install.packages("rsconnect") # used to deploy
library(shinythemes)
library(igraph)
library(shiny)
library(data.table)
library(rsconnect)
library(ggplot2)
library(dplyr)
load("search-criteria.RData")
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
setwd("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App")
# install.packages("shiny")
# install.packages("rsconnect") # used to deploy
library(shinythemes)
library(igraph)
library(shiny)
library(data.table)
library(rsconnect)
library(ggplot2)
library(dplyr)
load("search-criteria.RData")
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
setwd("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App")
# install.packages("shiny")
# install.packages("rsconnect") # used to deploy
library(shinythemes)
library(igraph)
library(shiny)
library(data.table)
library(rsconnect)
library(ggplot2)
library(dplyr)
load("search-criteria.RData")
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
setwd("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App")
# install.packages("shiny")
# install.packages("rsconnect") # used to deploy
library(shinythemes)
library(igraph)
library(shiny)
library(data.table)
library(rsconnect)
library(ggplot2)
library(dplyr)
load("search-criteria.RData")
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
runApp('C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App')
runApp('C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App')
runApp('C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App')
runApp('C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App')
shiny::runApp('C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App')
runApp('C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App')
source("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App/setup.R", echo=TRUE)
runApp()
.name_repair
.name_repair
rlang::last_error()
runApp()
rlang::last_error()
runApp()
rlang::last_error()
runApp()
setwd("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App")
# install.packages("shiny")
# install.packages("rsconnect") # used to deploy
library(shinythemes)
library(igraph)
library(shiny)
library(data.table)
library(rsconnect)
library(ggplot2)
library(dplyr)
load("search-criteria.RData")
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
setwd("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App")
# install.packages("shiny")
# install.packages("rsconnect") # used to deploy
library(shinythemes)
library(igraph)
library(shiny)
library(data.table)
library(rsconnect)
library(ggplot2)
library(dplyr)
# load("search-criteria.RData")
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
setwd("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App")
# install.packages("shiny")
# install.packages("rsconnect") # used to deploy
library(shinythemes)
library(igraph)
library(shiny)
library(data.table)
library(rsconnect)
library(ggplot2)
library(dplyr)
# load("search-criteria.RData")
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
runApp()
runApp()
runApp()
setwd("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App")
# install.packages("shiny")
# install.packages("rsconnect") # used to deploy
library(shinythemes)
library(igraph)
library(shiny)
library(data.table)
library(rsconnect)
library(ggplot2)
library(dplyr)
# load("search-criteria.RData")
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
setwd("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App")
# install.packages("shiny")
# install.packages("rsconnect") # used to deploy
library(shinythemes)
library(igraph)
library(shiny)
library(data.table)
library(rsconnect)
library(ggplot2)
library(dplyr)
# load("search-criteria.RData")
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
save(df.search.criteria, file = "search_criteria.RData")
runApp()
runApp()
runApp()
library(shinythemes)
library(igraph)
library(shiny)
library(data.table)
library(rsconnect)
library(ggplot2)
library(dplyr)
# load("search-criteria.RData")
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
library(data.table)
library(ggplot2)
library(igraph)
library(tidyverse)
library(corrplot)
library(knitr)
library(stringr)
library(RColorBrewer)
library(tidyselect)
library(shiny)
library(dplyr)
library(plyr)
library(viridisLite)
setwd("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App")
df.spotify <- read.csv('Spotify-2000.csv')
df.spotify$Liveness <- NULL
df.spotify$Danceability <- NULL
df.spotify$Valence <- NULL
df.spotify$Acousticness <- NULL
df.spotify$Speechiness <- NULL
newnames <- c('index', 'title', 'artist', 'top_genre', 'year', 'bpm', 'energy', 'dB', 'duration', 'popularity')
names(df.spotify) <- newnames
df.spotify <- df.spotify %>%
mutate(popularity_ranking = as.numeric(case_when(
(('popularity' > 0) & ('popularity' < 20)) ~ "1",
(('popularity' >= 20) & ('popularity' < 40))~ "2",
(('popularity' >= 40) & ('popularity' < 60)) ~ "3",
TRUE ~ "4"))
)
df.spotify$energy_only <- cut(df.spotify$energy, breaks = 10)
energy.plot <- df.spotify %>%
ggplot( aes(x = energy_only )) +
geom_bar(width = 0.2, fill = "#FF9999", colour = "black") +
scale_x_discrete(name = "Energy")
df.spotify.artist.popularity <- df.spotify %>%
group_by(artist) %>%
filter(n() >= 5) %>%
dplyr::summarize(mean_popularity = mean(popularity)) %>%
arrange(desc(mean_popularity)) %>%
slice_head(n = 10)
# save(df.spotify, file = "spotify_clean.RData")
# save(energy.plot, file = "energy_plot.RData")
# save(df.spotify.artist.popularity, file = "spotify_artist_popularity.RData")
song.bpm <- data.frame(matrix(ncol = 3, nrow = nrow(df.spotify)))
colnames(song.bpm) <- c('title','top_genre', 'bpm' )
song.bpm$title <- df.spotify$title
song.bpm$top_genre <- df.spotify$top_genre
song.bpm$bpm <- df.spotify$bpm
setDT(song.bpm)[bpm <=25, bpm_group := "0-25"]
song.bpm[bpm >25 & bpm <=50, bpm_group := "25-50"]
song.bpm[bpm >50 & bpm <=75, bpm_group := "50-75"]
song.bpm[bpm >75 & bpm <=100, bpm_group := "75-100"]
song.bpm[bpm >100 & bpm <=125, bpm_group := "100-125"]
song.bpm[bpm >125 & bpm <=150, bpm_group := "125-150"]
song.bpm[bpm >150 & bpm <=175, bpm_group := "150-175"]
song.bpm[bpm >175 & bpm <=200, bpm_group := "175-200"]
song.bpm[bpm >200 , bpm_group := "200+"]
sum(is.na(song.bpm))
song.bpm.clean <- na.omit(song.bpm)
sum(is.na(song.bpm.clean))
df.search.criteria <- song.bpm
df.search.criteria$popularity <- df.spotify$popularity
df.search.criteria$year <- df.spotify$year
df.search.criteria$duration <- df.spotify$duration
df.search.criteria$duration <- as.numeric(df.search.criteria$duration)
df.search.criteria <- na.omit(df.search.criteria)
#
# save(df.spotify, file = "spotify_clean.RData")
# save(energy.plot, file = "energy_plot.RData")
# save(df.spotify.artist.popularity, file = "spotify_artist_popularity.RData")
save(df.spotify, energy.plot, df.spotify.artist.popularity, df.search.criteria, file = "search-criteria.RData")
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
runApp()
load("C:/Users/joaod/Nova SBE/Network Analytics/Shinny App/Spotify Project/Shinny App/search-criteria.RData")
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='group6-networkanalytics',
token='EE026BA7A797A57C34B3DFA43FF2D6D7',
secret='V5/+hGhNrLEg4zb4Gb5BDUCQELh1rTbuIm65NSMM')
rsconnect::deployApp()
runApp()
runApp()
